apply plugin: 'com.android.application'

// 构造方法注入代码
task('processWithJavassist') << {
    // 项目编译后.class所在目录
    String classPath = file('build/intermediates/classes/debug')
    // 调用PatchClass.java的process方法，在.class文件构造方法注入代码
    dodola.patch.PatchClass.process(
            // 项目编译后.class所在目录
            classPath,
            // hackdex的.class所在目录
            project(':hackdex').buildDir.absolutePath + '/intermediates/classes/debug')

}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "dodola.hotfix"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // 在执行dx命令之前将代码注入到.class中
    applicationVariants.all { variant ->
        variant.dex.dependsOn << processWithJavassist
    }
}



dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.0'
    compile 'com.android.support:design:23.1.0'
    compile project(':hotfixlib')
}
